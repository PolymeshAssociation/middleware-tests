services:
  postgres:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - './docker/pg-extensions.sh:/docker-entrypoint-initdb.d/load-extensions.sh'
    environment:
      POSTGRES_PASSWORD: postgres

  vault:
    image: hashicorp/vault
    restart: unless-stopped
    ports:
      - ${VAULT_PORT:-8200}:8200
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -dev -dev-listen-address="0.0.0.0:8200" -dev-root-token-id="root"

  vault-init:
    build:
      context: ./docker
      dockerfile: vault-init.dockerfile
    depends_on:
      - vault
    restart: 'no'

  alice:
    # image: ${CHAIN_IMAGE:-polymeshassociation/polymesh:latest-staging-debian}
    # image: polymeshassociation/polymesh-arm64:99dc6cc1b2-develop-debian
    image: ${CHAIN_IMAGE}
    init: true # Faster shutdown by container process not be PID 1
    restart: unless-stopped
    ports: # expose ports to localhostpoint to dockerfile
      - '9944:9944' # ws://
      - '9933:9933' # http://
      - '30333:30333' # for other nodes
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - './docker/chain-entry.sh:/chain-entry.sh'
    entrypoint: '/chain-entry.sh'
    command: ['--alice --chain dev']

  subquery:
    image:  ${SUBQUERY_INDEXER_IMAGE}
    init: true
    healthcheck:
      test: curl --fail http://localhost:3000/meta || exit 1
      interval: 20s
      retries: 30
      start_period: 20s
      timeout: 10s
    restart: unless-stopped
    depends_on:
      - 'postgres'
    ports:
      - 3002:3000
    environment:
      NETWORK_ENDPOINT: ws://alice:9944
      NETWORK_HTTP_ENDPOINT: http://alice:9933
      DB_USER: '${PG_USER:-postgres}'
      DB_PASS: '${PG_PASSWORD:-postgres}'
      DB_DATABASE: '${PG_DB:-postgres}'
      DB_PORT: '${PG_PORT:-postgres}'
      DB_HOST: '${PG_HOST:-postgres}'
      NODE_ENV: local
    command:
      - --batch-size=500
      - -f=/app
      - --local

  graphql:
    image: onfinality/subql-query:v1.0.0
    ports:
      - ${SQ_PORT:-3001}:3000
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      postgres:
        condition: service_started
      subquery:
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_DATABASE: postgres
      DB_USER: '${PG_USER:-postgres}'
      DB_PASS: '${PG_PASSWORD:-postgres}'
      DB_PORT: '${PG_PORT:-5432}'
      DB_HOST: '${PG_HOST:-postgres}'
    command:
      - --name=public
      - --playground
      - --indexer=http:/host.docker.internal:3002

  rest-api:
    image: ${REST_IMAGE}
    init: true
    restart: unless-stopped
    depends_on:
      - alice
      - vault
      - graphql
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - ${REST_PORT:-3004}:3000
    environment:
      POLYMESH_NODE_URL: 'ws://alice:9944'
      POLYMESH_MIDDLEWARE_V2_URL: 'http://host.docker.internal:3001'
      VAULT_URL: 'http://vault:8200/v1/transit'
      VAULT_TOKEN: 'root'
      AUTH_STRATEGY: 'open'
      DEVELOPER_UTILS: 'true'
